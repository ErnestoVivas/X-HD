within Configurations.DataBase;
block Hyteresis_crossed
  extends Modelica.Blocks.Icons.BooleanBlock;



  Modelica.Blocks.Interfaces.RealInput u
    annotation (Placement(transformation(extent={{-126,-22},{-86,18}})));
  Modelica.Blocks.Interfaces.BooleanOutput y
    annotation (Placement(transformation(extent={{100,-10},{120,10}})));
  Modelica.Blocks.Logical.LessEqualThreshold lessEqualThreshold(threshold=55)
    annotation (Placement(transformation(extent={{-42,54},{-22,74}})));
  Modelica.Blocks.Logical.LogicalSwitch logicalSwitch
    annotation (Placement(transformation(extent={{54,-12},{74,8}})));
  Modelica.Blocks.Logical.Or or1
    annotation (Placement(transformation(extent={{10,54},{30,74}})));
  Modelica.Blocks.Logical.And and1
    annotation (Placement(transformation(extent={{90,44},{108,62}})));
  Modelica.Blocks.Logical.GreaterThreshold greaterThreshold
    annotation (Placement(transformation(extent={{54,-84},{74,-64}})));
  Modelica.Blocks.Logical.LessThreshold lessThreshold
    annotation (Placement(transformation(extent={{60,-64},{80,-44}})));
initial equation

equation
  connect(u, lessEqualThreshold.u) annotation (Line(points={{-106,-2},{-74,-2},
          {-74,64},{-44,64}}, color={0,0,127}));
  connect(logicalSwitch.y, y) annotation (Line(points={{75,-2},{90,-2},{90,0},{
          110,0}}, color={255,0,255}));
  connect(lessEqualThreshold.y, or1.u1)
    annotation (Line(points={{-21,64},{-6.5,64},{8,64}}, color={255,0,255}));
  annotation (Icon(graphics={            Rectangle(
          extent={{-100,100},{100,-100}},
          fillColor={210,210,210},
          lineThickness=5.0,
          fillPattern=FillPattern.Solid,
          borderPattern=BorderPattern.Raised),
        Polygon(
          points={{-80,90},{-88,68},{-72,68},{-80,90}},
          lineColor={192,192,192},
          fillColor={192,192,192},
          fillPattern=FillPattern.Solid),
        Line(points={{-80,68},{-80,-29}}, color={192,192,192}),
        Polygon(
          points={{92,-29},{70,-21},{70,-37},{92,-29}},
          lineColor={192,192,192},
          fillColor={192,192,192},
          fillPattern=FillPattern.Solid),
        Line(points={{-79,-29},{84,-29}}, color={192,192,192}),
        Line(points={{-79,-29},{41,-29}}),
        Line(points={{-15,-21},{1,-29},{-15,-36}}),
        Line(points={{41,51},{41,-29}}),
        Line(points={{33,3},{41,22},{50,3}}),
        Line(points={{-49,51},{81,51}}),
        Line(points={{-4,59},{-19,51},{-4,43}}),
        Line(points={{-59,29},{-49,11},{-39,29}}),
        Line(points={{-49,51},{-49,-29}}),
        Text(
          extent={{-92,-49},{-9,-92}},
          lineColor={192,192,192},
          textString="%uLow"),
        Text(
          extent={{2,-49},{91,-92}},
          lineColor={192,192,192},
          textString="%uHigh"),
        Rectangle(extent={{-91,-49},{-8,-92}}, lineColor={192,192,192}),
        Line(points={{-49,-29},{-49,-49}}, color={192,192,192}),
        Rectangle(extent={{2,-49},{91,-92}}, lineColor={192,192,192}),
        Line(points={{41,-29},{41,-49}}, color={192,192,192})}));
end Hyteresis_crossed;
